import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export default function CrudModal({ open, mode = "edit", title, headers = [], data = {}, errors = {}, conflict = null, onClose, onSubmit, onChange, onResolve, }) {
    if (!open)
        return null;
    if (mode === "conflict" && conflict) {
        const pk = (conflict && (conflict.id ?? conflict[Object.keys(conflict)[0]])) || "id";
        return (_jsx("div", { className: "fixed inset-0 flex items-center justify-center bg-black bg-opacity-50", children: _jsxs("div", { className: "bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 w-[820px] max-w-full", children: [_jsx("h2", { className: "text-lg font-bold mb-4 text-gray-900 dark:text-gray-100", children: "Conflict detected" }), _jsx("p", { className: "text-sm text-slate-600 mb-4", children: "The row was changed by another process. Choose how to resolve." }), _jsxs("div", { className: "grid grid-cols-2 gap-4 mb-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-medium", children: "Current (on disk)" }), _jsx("div", { className: "mt-2 border p-2 rounded bg-slate-50 dark:bg-slate-900 max-h-48 overflow-auto", children: Object.entries(conflict).map(([k, v]) => (_jsxs("div", { className: "text-sm", children: [_jsxs("strong", { children: [k, ":"] }), " ", String(v)] }, k))) })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium", children: "Your changes" }), _jsx("div", { className: "mt-2 border p-2 rounded bg-slate-50 dark:bg-slate-900 max-h-48 overflow-auto", children: Object.entries(data || {}).map(([k, v]) => (_jsxs("div", { className: "text-sm", children: [_jsxs("strong", { children: [k, ":"] }), " ", String(v)] }, k))) })] })] }), _jsxs("div", { className: "flex justify-end gap-3", children: [_jsx("button", { onClick: () => onResolve && onResolve("reload"), className: "px-4 py-2 bg-gray-200 rounded", children: "Reload" }), _jsx("button", { onClick: () => onResolve && onResolve("overwrite"), className: "px-4 py-2 bg-red-500 text-white rounded", children: "Overwrite" })] })] }) }));
    }
    return (_jsx("div", { className: "fixed inset-0 flex items-center justify-center bg-black bg-opacity-50", children: _jsxs("div", { className: "bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 w-96", children: [_jsx("h2", { className: "text-lg font-bold mb-4 text-gray-900 dark:text-gray-100", children: title }), headers.map((header) => (_jsxs("div", { className: "mb-4", children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300", children: header }), _jsx("input", { className: "mt-1 block w-full border px-2 py-1", value: data[header] || "", onChange: (e) => onChange && onChange(header, e.target.value) }), errors[header] && (_jsx("p", { className: "mt-1 text-sm text-red-600", children: errors[header] }))] }, header))), _jsxs("div", { className: "flex justify-end space-x-4", children: [_jsx("button", { onClick: onClose, className: "px-4 py-2 bg-gray-200 rounded", children: "Close" }), _jsx("button", { onClick: onSubmit, className: "px-4 py-2 bg-blue-500 text-white rounded", children: "Submit" })] })] }) }));
}
//# sourceMappingURL=CrudModal.js.map